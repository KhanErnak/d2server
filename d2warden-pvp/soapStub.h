/* soapStub.h
   Generated by gSOAP 2.8.3 from ARGoldSoap.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include <vector>
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns1__ARQuerySaldoResponse
#define SOAP_TYPE_ns1__ARQuerySaldoResponse (11)
/* ns1:ARQuerySaldoResponse */
struct ns1__ARQuerySaldoResponse
{
public:
	int saldo;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__ARQuerySaldo
#define SOAP_TYPE_ns1__ARQuerySaldo (12)
/* ns1:ARQuerySaldo */
struct ns1__ARQuerySaldo
{
public:
	std::string account;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__ARTransferGoldResponse
#define SOAP_TYPE_ns2__ARTransferGoldResponse (15)
/* ns2:ARTransferGoldResponse */
struct ns2__ARTransferGoldResponse
{
public:
	std::string return_;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__ARTransferGold
#define SOAP_TYPE_ns2__ARTransferGold (16)
/* ns2:ARTransferGold */
struct ns2__ARTransferGold
{
public:
	std::string SenderAcc;	/* required element of type xsd:string */
	std::string ReceiverAcc;	/* required element of type xsd:string */
	int Amount;	/* required element of type xsd:int */
	std::string GameName;	/* required element of type xsd:string */
	std::string SenderIP;	/* required element of type xsd:string */
	std::string ReceiverIP;	/* required element of type xsd:string */
	std::string SenderPassword;	/* required element of type xsd:string */
	std::string GSAuthPassword;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns3__ARLiveBroadcastResponse
#define SOAP_TYPE_ns3__ARLiveBroadcastResponse (18)
/* ns3:ARLiveBroadcastResponse */
struct ns3__ARLiveBroadcastResponse
{
public:
	std::string return_;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns3__ARLiveBroadcast
#define SOAP_TYPE_ns3__ARLiveBroadcast (19)
/* ns3:ARLiveBroadcast */
struct ns3__ARLiveBroadcast
{
public:
	std::string GSName;	/* required element of type xsd:string */
	std::string GameName;	/* required element of type xsd:string */
	std::string Type;	/* required element of type xsd:string */
	std::string Data;	/* required element of type xsd:string */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (20)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (21)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (23)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (26)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (27)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
